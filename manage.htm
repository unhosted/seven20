<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title></title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="seven20 - a data management interface for remoteStorage">
    <meta name="author" content="epic720">


    <link href="./css/jquery.pnotify.default.css" rel="stylesheet" type="text/css" />
    <link href="./css/jquery.pnotify.default.icons.css" rel="stylesheet" type="text/css" />
    <link href="./css/jquery.seven20.css" rel="stylesheet" type="text/css" />
    <link href="./css/bootstrap.css" rel="stylesheet" type="text/css" />
    <style type="text/css">
        body {
            padding-top: 60px;
            padding-bottom: 40px;
        }
        #sidebar {
            min-width: 20em;
        }
        #remotestorage-state {
            top: -2px !important;
        }
        .ui-pnotify-history-container {
            right: 305px;
        }
        .form-horizontal .controls {
            margin-left: 105px;
        }
        .form-horizontal .control-label {
            width: 100px;
        }
        .nav-list > li > a {
            cursor: pointer;
        }
        .tabbable {
            position: relative;
        }
        .tab-content
        {
            height: 25em;
            overflow: auto;
        }
        .icon-blank {
            background-image: none;
            background-position: 0;
        }

        .btn.btn-primary.right-padding {
            margin-right: 2em;
            margin-left: 2em;
        }
        .form-horizontal .form-actions {
            padding-left: 0 !important;
        }
        /*.form-actions input[class*="span"], select[class*="span"], textarea[class*="span"],*/
        /*.uneditable-input[class*="span"], .row-fluid input[class*="span"], .row-fluid select[class*="span"],*/
        /*.row-fluid textarea[class*="span"], .row-fluid .uneditable-input[class*="span"] {*/
            /*float: left;*/
        /*}*/
    </style>

    <!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
    <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le fav and touch icons -->
    <link rel="shortcut icon" href="../assets/ico/favicon.ico">
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="../assets/ico/apple-touch-icon-144-precomposed.png">
    <link rel="apple-touch-icon-precomposed" sizes="114x114" href="../assets/ico/apple-touch-icon-114-precomposed.png">
    <link rel="apple-touch-icon-precomposed" sizes="72x72" href="../assets/ico/apple-touch-icon-72-precomposed.png">
    <link rel="apple-touch-icon-precomposed" href="../assets/ico/apple-touch-icon-57-precomposed.png">
</head>

<body>

<div id="topnav">
</div>

<div class="container-fluid">
    <div class="row-fluid">
        <div id="dataGrid">
            <div id="gridUI" class="grid-height row-fluid">
                <div id="sidebar" class="span1"></div>
            </div>
        </div>
    </div><!--/row-->

    <footer>
        <p>&copy; Seven20 2012</p>
    </footer>

</div><!--/.fluid-container-->
<script src="http://code.jquery.com/jquery.min.js"></script>
<script src="./scripts/bootstrap.js"></script>
<script src="./scripts/jquery.validate.min.js"></script>
<script src="./scripts/jquery.pnotify.min.js"></script>
<script src="./scripts/jquery.seven20.js"></script>
<script src="./scripts/jquery.seven20.editor.js"></script>
<script src="./scripts/jquery.seven20.navigator.js"></script>
<script src="./scripts/jquery.seven20.grid.js"></script>
<script src="./scripts/bootstrap.helper.js"></script>
<script src="./scripts/remoteStorage-debug.js"></script>
<script src="./scripts/root.js"></script>
<script src="./scripts/jzip.js"></script>
<script src="./scripts/jszip-load.js"></script>
<script src="./scripts/swfobject.js"></script>
<script src="./scripts/downloadify.min.js"></script>

<script>
    var modalHtml = '<div class="modal-header">' +
            '<button type="button" class="close" data-dismiss="modal">Ã—</button>' +
            '<h3>##header##</h3>' +
            '</div>' +
            '<div class="modal-body">##body##</div>' +
            '<div class="modal-footer">' +
            '<a href="#" class="btn" data-dismiss="modal">Close</a>' +
            '<a href="#" class="btn btn-primary" id="importButton">Import</a>' +
            '</div>';
    var zipImportHtml = '<input type="file" id="files" name="files[]"><div id="uploadObjects"></div>';
    var jsonImportHtml = '';
    var zipFileToImport;

    $().ready(function(){
        bootstrapNav('#topnav', 'Seven20', seven20NavLinks);

        remoteStorage.loadModule('root', 'rw');
        remoteStorage.displayWidget('widget');

        $('#dataGrid').seven20Grid({});

        var tab0 = '<ul data-path="/" class="nav nav-list"></ul>';
        var tab1 = '<ul class="nav nav-list"><li><a class="nav-header" onclick="showGridData(\'/public/\');"><i class="icon-globe"></i>public/</a><ul data-path="/public/" class="nav nav-list"></ul></li></ul>';
        var tab2 = '<p><div class="btn-group">' +
                '<button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">Import from file <span class="caret"></span></button>' +
                '<ul class="dropdown-menu">' +
                '<li><a onclick="importFromZip();">Zip</a></li>' +
                '<li><a onclick="importFromJSON();">JSon</a></li>' +
                '</ul>' +
                '</div>' +
                '<div class="btn-group">' +
                '<button class="btn btn-inverse dropdown-toggle" data-toggle="dropdown">Export to file<span class="caret"></span></button>' +
                '<ul class="dropdown-menu">' +
                '<li><a id="downloadify">Zip</a></li>' +
                '</ul>' +
                '</div>' +
                '<div class="modal hide" id="importModal">' +
                '</div></p>' +
                '<p><button class="btn btn-danger" onclick="deleteAllLocalStorage(); return false;">Clear all local storage</button></p>' +
                '<p><button class="btn btn-info" onclick="refreshTabs(); return false;">Refresh Folders</button></p>';

        $('#dataGrid').seven20Navigator({navSelector:'#sidebar', tabContent:[tab0,tab1,tab2], navigationFolders:['/','/public/'], folderOnClick:'showGridData'});

        Downloadify.create('downloadify',{
            data: function(){
                return exportData().generate();
            },
            dataType: 'base64',
            filename: function(){
                return "remoteStorage-" + new Date().toISOString().slice(0, 10) + ".zip";
            },
            onComplete: function(){
                alert('Your File Has Been Saved!');
            },
            onCancel: function(){
                alert('You have cancelled the saving of this file.');
            },
            onError: function(){
                alert('You must put something in the File Contents or there will be nothing to save!');
            },
            transparent: false,
            swf: 'media/downloadify.swf',
            downloadImage: 'img/download.png',
            width: 100,
            height: 30,
            append: false
        });
    });

    function deleteAllLocalStorage()
    {
        localStorage.clear();
        refreshTabs();
    }
    
    function showGridData(path)
    {
        var target = '[data-path="' + path + '"]';
        if($(target).prev('a').data() !== null)
        {
            $('#dataGrid').seven20Grid.clear();
            $('#dataGrid').seven20Grid.setDataPath(path);
            $($(target).prev('a').data().objectIds).each(function(i, item){
                var id = path + item;
                $('#dataGrid').seven20Grid.insert(remoteStorage.root.getObject(id), id);
            });
        }
    }

    function importFromZip()
    {
        $('#importModal').html(modalHtml.replace("##header##","Import from zip file").replace("##body##", zipImportHtml));
        $('#files').bind('change',handleFileSelect);
        $('#importButton').bind('click',importZipFile);
        $('#importModal').modal();
    }

    function importZipFile()
    {
        $.each(zipFileToImport.files, function(k, v) {
            if(k.charAt(k.length - 1) != '/')
            {
                var path = "/" + k.split('.')[0];
                var data = {};
                if(v.data != "")
                    data = JSON.parse(v.data);
                var type = data['@type'];
                remoteStorage.root.setObject(type, path, data);
            }
        });

        //window.location = "manage.htm";
        $(this).prev().click();
        refreshTabs();
    }

    function refreshTabs()
    {
        $('#dataGrid').seven20Navigator.refreshTabs();
    }

    function handleFileSelect(evt) {
        var files = evt.target.files; // FileList object

        // Loop through the FileList and render image files as thumbnails.
        for (var i = 0, f; f = files[i]; i++) {

            // Only process image files.
            if (!(f.type.match('application/x-zip-compressed') ||
                    f.type.match('application/zip'))) {
                continue;
            }

            var reader = new FileReader();

            // Closure to capture the file information.
            reader.onload = (function(theFile) {
                return function(e) {
                    var zip = new JSZip();
                    var data = e.target.result.split(',')[1];
                    zip.load(data, {base64:true});
                    parseZipFileToString(zip);
                    zipFileToImport = zip;
                };
            })(f);

            // Read in the image file as a data URL.
            reader.readAsDataURL(f);
        }
    }

    function parseZipFileToString(zip)
    {
        $('#uploadObjects').html("<p>folders and files to be uploaded:</p>")
        $.each(zip.files, function(k, v) {

            $('#uploadObjects').append(k + "<br>");
        });
    }


    function importFromJSON()
    {
        $('#importModal').html(modalHtml.replace("##header##","Import from json string").replace("##body##", jsonImportHtml));
        $('#importModal').modal();
    }

    function exportData()
    {
        var zip = new JSZip();

        addFilesToFolder(zip, '/');

        return zip;
        var content = zip.generate();
        location.href="data:application/zip;base64,"+content;
    }

    function addFilesToFolder(folder, path)
    {
        var nextFolder;
        var listing = remoteStorage.root.getListing(path);

        for(var i=0; i<listing.length; i++) {
            if(listing[i].charAt(listing[i].length - 1) == '/')
            {
                nextFolder = folder.folder(listing[i].replace(/\//g,""));
                addFilesToFolder(nextFolder, path + listing[i]);
            }
            else
            {
                folder.file(listing[i] + ".json",JSON.stringify(remoteStorage.root.getObject(path + listing[i])));
            }
        }
    }

    
</script>
</body>
</html>


